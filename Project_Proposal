Team Members: Geoff, Joseph and Nick

  Problem Statement: The current security problem we would like to address is focused primarily on human error, phishing and passwords. Passwords have provided a relatively secure system for users to access many different accounts on different servers and hosts. However passwords have some issues such as data breaches (e.g. if a server host has a data breach and your password is in their data base, malicious attackers could use this password to either get into this account or others with the same password). Passwords have the capability to be fairly difficult to breach if a random long password chosen. However in practice most users of passwords may choose a few passwords that often represent a dictionary word. (2)This can pose some threats if a human gets phished for one of their passwords opening up their accounts for access by malicious attackers. Our goal for this project is to implement a client server system that implements the FIDO concept of passkeys. 

  Status Quo: Passkeys can solve a large amount of issues such as data breaches, human inadequate password creation, and phishing. The high level overview of how passkeys work is as follows, a user has a device which they can either access via a PIN or a biometric. Now when a user creates an account and wants to create a passkey to that account on the web server, the user simply presses a button and a private key is created that is stored in the users device and a public key is created on the server. The user accesses its account by performing some challenge, which is the device requests accass to the account from the server; The server responds with a challenge that is encrypted using the users public key (e.g. what word have I encrypted); Since the private key that can decrypt this message or challenge is only present on the true users device, only the true user can decrypt and pass this challenge, gaining access to the account. Some issues with the passkey implementation are syncing functionality. That is if a user has multiple devices and would like to use the same account on both devices, the system would need a way to create a passkey on the second device linked to the same account, or get the passkey from the first device duplicated. One solution may be having an intermediary server that holds all the passkeys to all the accounts. Accessing accounts then requires authenticating with this intermediary, then from the server going to the web server (The authentication for the intermediary server can either be done with another passkey or password, etc.). Another issue is scalability, specifically many application and web servers dont support passkey functionality. This would require a lot of software changes across many web applications.
